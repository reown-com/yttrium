import groovy.json.JsonSlurper

apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'maven-publish'

// String findRustlsPlatformVerifierProject() {
//     try {
//         def projectRoot = new File(project.projectDir, "../../..")
//         def yttriumCargoToml = new File(projectRoot, "crates/yttrium/Cargo.toml")
        
//         def dependencyText = providers.exec {
//             it.workingDir = projectRoot
//             commandLine("cargo", "metadata", "--format-version", "1", "--filter-platform", "aarch64-linux-android", "--manifest-path", yttriumCargoToml.absolutePath, "--features", "android")
//         }.standardOutput.asText.get()

//         def dependencyJson = new JsonSlurper().parseText(dependencyText)
//         def verifierPackage = dependencyJson.packages.find { it.name == "rustls-platform-verifier-android" }
        
//         if (verifierPackage != null) {
//             def manifestPath = file(verifierPackage.manifest_path)
//             def mavenPath = new File(manifestPath.parentFile, "maven")
//             if (mavenPath.exists()) {
//                 println("Found rustls-platform-verifier maven directory at: ${mavenPath.absolutePath}")
//                 return mavenPath.absolutePath
//             } else {
//                 println("rustls-platform-verifier maven directory not found at: ${mavenPath.absolutePath}")
//             }
//         } else {
//             println("rustls-platform-verifier-android package not found in cargo metadata")
//         }
//     } catch (Exception e) {
//         println("Could not locate rustls-platform-verifier maven repository: ${e.message}")
//     }
// }

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.6.0'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.22'
    }
}

repositories {
    google()
    mavenCentral()
    // maven {
    //     url = findRustlsPlatformVerifierProject()
    //     metadataSources.artifact()
    // }
}

android {
    namespace "com.reown.yttrium.uniffi"

    compileSdkVersion 35

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 35
        
        // Enable 16 KB page size support
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_PAGE_SIZE_16KB=ON"
            }
        }
    }
    
    buildFeatures {
        buildConfig = true
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
            java.srcDirs = ['src/main/kotlin']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

     packagingOptions {
        doNotStrip "*/libuniffi_yttrium.so"
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }
    
    // NDK build configuration for 16 KB page size support
    ndkVersion "26.1.10909125"
    
    // Ensure proper alignment for 16 KB page sizes
    packagingOptions {
        doNotStrip "*/libuniffi_yttrium.so"
        // Add 16 KB alignment for native libraries
        jniLibs {
            useLegacyPackaging = false
        }
    }

    dependencies { 
        // implementation 'rustls:rustls-platform-verifier:0.1.1'
        implementation 'net.java.dev.jna:jna:5.12.0@aar'
        implementation 'androidx.core:core-ktx:1.10.1'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.1'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

publishing {
    publications {
        release(MavenPublication) {
            artifact("$buildDir/outputs/aar/${project.name}-release.aar")

            groupId = 'com.github.reown-com'
            artifactId = 'yttrium'
            version = project.hasProperty("version") ? project.getProperty("version") : "0.0.1"

            pom {
                name.set("Yttrium")
                description.set("An Android library for Yttrium.")
                url.set("https://github.com/reown-com/Yttrium")

                 scm {
                        connection.set("scm:git:git://github.com:reown-com/yttrium.git")
                        developerConnection.set("scm:git:ssh://github.com:reown-com/yttrium.git")
                        url.set("https://github.com/reown-com/yttrium")
                    }
            }
        }
    }
}

tasks.named("publishReleasePublicationToMavenLocal") {
    dependsOn("assembleRelease")
}