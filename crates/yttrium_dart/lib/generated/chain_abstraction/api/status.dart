// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'status.freezed.dart';

@freezed
sealed class StatusResponse with _$StatusResponse {
  const StatusResponse._();

  const factory StatusResponse.pending(
    StatusResponsePendingObject field0,
  ) = StatusResponse_Pending;
  const factory StatusResponse.completed(
    StatusResponseCompleted field0,
  ) = StatusResponse_Completed;
  const factory StatusResponse.error(
    StatusResponseError field0,
  ) = StatusResponse_Error;
}

class StatusResponseCompleted {
  final BigInt createdAt;

  const StatusResponseCompleted({
    required this.createdAt,
  });

  @override
  int get hashCode => createdAt.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is StatusResponseCompleted &&
          runtimeType == other.runtimeType &&
          createdAt == other.createdAt;
}

class StatusResponseError {
  final BigInt createdAt;
  final String error;

  const StatusResponseError({
    required this.createdAt,
    required this.error,
  });

  @override
  int get hashCode => createdAt.hashCode ^ error.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is StatusResponseError &&
          runtimeType == other.runtimeType &&
          createdAt == other.createdAt &&
          error == other.error;
}

class StatusResponsePendingObject {
  final BigInt createdAt;

  /// Polling interval in ms for the client
  final BigInt checkIn;

  const StatusResponsePendingObject({
    required this.createdAt,
    required this.checkIn,
  });

  @override
  int get hashCode => createdAt.hashCode ^ checkIn.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is StatusResponsePendingObject &&
          runtimeType == other.runtimeType &&
          createdAt == other.createdAt &&
          checkIn == other.checkIn;
}
