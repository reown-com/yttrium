// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'api/prepare.dart';
import 'currency.dart';
import 'dart_compat_models.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ChainAbstractionClient>>
abstract class ChainAbstractionClient implements RustOpaqueInterface {
  Future<String> erc20TokenBalance(
      {required String chainId, required String token, required String owner});

  Future<Eip1559EstimationCompat> estimateFees({required String chainId});

  Future<ExecuteDetailsCompat> execute(
      {required UiFieldsCompat uiFields,
      required List<PrimitiveSignatureCompat> routeTxnSigs,
      required PrimitiveSignatureCompat initialTxnSig});

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<ChainAbstractionClient> newInstance(
          {required String projectId,
          required PulseMetadataCompat pulseMetadata}) =>
      YttriumDart.instance.api
          .crateChainAbstractionDartCompatChainAbstractionClientNew(
              projectId: projectId, pulseMetadata: pulseMetadata);

  Future<PrepareResponseCompat> prepare(
      {required String chainId,
      required String from,
      required CallCompat call});

  Future<PrepareDetailedResponseCompat> prepareDetailed(
      {required String chainId,
      required String from,
      required CallCompat call,
      required Currency localCurrency});
}
