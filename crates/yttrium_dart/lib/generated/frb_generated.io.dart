// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'chain_abstraction/api/prepare.dart';
import 'chain_abstraction/currency.dart';
import 'chain_abstraction/dart_compat.dart';
import 'chain_abstraction/dart_compat_models.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class YttriumDartApiImplPlatform extends BaseApiImpl<YttriumDartWire> {
  YttriumDartApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_ChainAbstractionClientPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClientPtr;

  @protected
  ChainAbstractionClient
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          dynamic raw);

  @protected
  ChainAbstractionClient
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          dynamic raw);

  @protected
  ChainAbstractionClient
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  BigInt dco_decode_U128(dynamic raw);

  @protected
  AmountCompat dco_decode_amount_compat(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  CallCompat dco_decode_box_autoadd_call_compat(dynamic raw);

  @protected
  PrepareDetailedResponseSuccessCompat
      dco_decode_box_autoadd_prepare_detailed_response_success_compat(
          dynamic raw);

  @protected
  PrepareResponseError dco_decode_box_autoadd_prepare_response_error(
      dynamic raw);

  @protected
  PrepareResponseNotRequiredCompat
      dco_decode_box_autoadd_prepare_response_not_required_compat(dynamic raw);

  @protected
  PrimitiveSignatureCompat dco_decode_box_autoadd_primitive_signature_compat(
      dynamic raw);

  @protected
  PulseMetadataCompat dco_decode_box_autoadd_pulse_metadata_compat(dynamic raw);

  @protected
  BigInt dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  UiFieldsCompat dco_decode_box_autoadd_ui_fields_compat(dynamic raw);

  @protected
  BridgingError dco_decode_bridging_error(dynamic raw);

  @protected
  CallCompat dco_decode_call_compat(dynamic raw);

  @protected
  Currency dco_decode_currency(dynamic raw);

  @protected
  Eip1559EstimationCompat dco_decode_eip_1559_estimation_compat(dynamic raw);

  @protected
  ErrorCompat dco_decode_error_compat(dynamic raw);

  @protected
  ExecuteDetailsCompat dco_decode_execute_details_compat(dynamic raw);

  @protected
  FeeEstimatedTransactionCompat dco_decode_fee_estimated_transaction_compat(
      dynamic raw);

  @protected
  FundingMetadataCompat dco_decode_funding_metadata_compat(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  InitialTransactionMetadataCompat
      dco_decode_initial_transaction_metadata_compat(dynamic raw);

  @protected
  List<FundingMetadataCompat> dco_decode_list_funding_metadata_compat(
      dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<PrimitiveSignatureCompat> dco_decode_list_primitive_signature_compat(
      dynamic raw);

  @protected
  List<TransactionCompat> dco_decode_list_transaction_compat(dynamic raw);

  @protected
  List<TransactionFeeCompat> dco_decode_list_transaction_fee_compat(
      dynamic raw);

  @protected
  List<TxnDetailsCompat> dco_decode_list_txn_details_compat(dynamic raw);

  @protected
  MetadataCompat dco_decode_metadata_compat(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  BigInt? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  PrepareDetailedResponseCompat dco_decode_prepare_detailed_response_compat(
      dynamic raw);

  @protected
  PrepareDetailedResponseSuccessCompat
      dco_decode_prepare_detailed_response_success_compat(dynamic raw);

  @protected
  PrepareResponseAvailableCompat dco_decode_prepare_response_available_compat(
      dynamic raw);

  @protected
  PrepareResponseError dco_decode_prepare_response_error(dynamic raw);

  @protected
  PrepareResponseNotRequiredCompat
      dco_decode_prepare_response_not_required_compat(dynamic raw);

  @protected
  PrimitiveSignatureCompat dco_decode_primitive_signature_compat(dynamic raw);

  @protected
  PulseMetadataCompat dco_decode_pulse_metadata_compat(dynamic raw);

  @protected
  TransactionCompat dco_decode_transaction_compat(dynamic raw);

  @protected
  TransactionFeeCompat dco_decode_transaction_fee_compat(dynamic raw);

  @protected
  TransactionReceiptCompat dco_decode_transaction_receipt_compat(dynamic raw);

  @protected
  TxnDetailsCompat dco_decode_txn_details_compat(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  UiFieldsCompat dco_decode_ui_fields_compat(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  ChainAbstractionClient
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          SseDeserializer deserializer);

  @protected
  ChainAbstractionClient
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          SseDeserializer deserializer);

  @protected
  ChainAbstractionClient
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_U128(SseDeserializer deserializer);

  @protected
  AmountCompat sse_decode_amount_compat(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  CallCompat sse_decode_box_autoadd_call_compat(SseDeserializer deserializer);

  @protected
  PrepareDetailedResponseSuccessCompat
      sse_decode_box_autoadd_prepare_detailed_response_success_compat(
          SseDeserializer deserializer);

  @protected
  PrepareResponseError sse_decode_box_autoadd_prepare_response_error(
      SseDeserializer deserializer);

  @protected
  PrepareResponseNotRequiredCompat
      sse_decode_box_autoadd_prepare_response_not_required_compat(
          SseDeserializer deserializer);

  @protected
  PrimitiveSignatureCompat sse_decode_box_autoadd_primitive_signature_compat(
      SseDeserializer deserializer);

  @protected
  PulseMetadataCompat sse_decode_box_autoadd_pulse_metadata_compat(
      SseDeserializer deserializer);

  @protected
  BigInt sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  UiFieldsCompat sse_decode_box_autoadd_ui_fields_compat(
      SseDeserializer deserializer);

  @protected
  BridgingError sse_decode_bridging_error(SseDeserializer deserializer);

  @protected
  CallCompat sse_decode_call_compat(SseDeserializer deserializer);

  @protected
  Currency sse_decode_currency(SseDeserializer deserializer);

  @protected
  Eip1559EstimationCompat sse_decode_eip_1559_estimation_compat(
      SseDeserializer deserializer);

  @protected
  ErrorCompat sse_decode_error_compat(SseDeserializer deserializer);

  @protected
  ExecuteDetailsCompat sse_decode_execute_details_compat(
      SseDeserializer deserializer);

  @protected
  FeeEstimatedTransactionCompat sse_decode_fee_estimated_transaction_compat(
      SseDeserializer deserializer);

  @protected
  FundingMetadataCompat sse_decode_funding_metadata_compat(
      SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  InitialTransactionMetadataCompat
      sse_decode_initial_transaction_metadata_compat(
          SseDeserializer deserializer);

  @protected
  List<FundingMetadataCompat> sse_decode_list_funding_metadata_compat(
      SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<PrimitiveSignatureCompat> sse_decode_list_primitive_signature_compat(
      SseDeserializer deserializer);

  @protected
  List<TransactionCompat> sse_decode_list_transaction_compat(
      SseDeserializer deserializer);

  @protected
  List<TransactionFeeCompat> sse_decode_list_transaction_fee_compat(
      SseDeserializer deserializer);

  @protected
  List<TxnDetailsCompat> sse_decode_list_txn_details_compat(
      SseDeserializer deserializer);

  @protected
  MetadataCompat sse_decode_metadata_compat(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  BigInt? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  PrepareDetailedResponseCompat sse_decode_prepare_detailed_response_compat(
      SseDeserializer deserializer);

  @protected
  PrepareDetailedResponseSuccessCompat
      sse_decode_prepare_detailed_response_success_compat(
          SseDeserializer deserializer);

  @protected
  PrepareResponseAvailableCompat sse_decode_prepare_response_available_compat(
      SseDeserializer deserializer);

  @protected
  PrepareResponseError sse_decode_prepare_response_error(
      SseDeserializer deserializer);

  @protected
  PrepareResponseNotRequiredCompat
      sse_decode_prepare_response_not_required_compat(
          SseDeserializer deserializer);

  @protected
  PrimitiveSignatureCompat sse_decode_primitive_signature_compat(
      SseDeserializer deserializer);

  @protected
  PulseMetadataCompat sse_decode_pulse_metadata_compat(
      SseDeserializer deserializer);

  @protected
  TransactionCompat sse_decode_transaction_compat(SseDeserializer deserializer);

  @protected
  TransactionFeeCompat sse_decode_transaction_fee_compat(
      SseDeserializer deserializer);

  @protected
  TransactionReceiptCompat sse_decode_transaction_receipt_compat(
      SseDeserializer deserializer);

  @protected
  TxnDetailsCompat sse_decode_txn_details_compat(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  UiFieldsCompat sse_decode_ui_fields_compat(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          ChainAbstractionClient self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          ChainAbstractionClient self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
          ChainAbstractionClient self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_U128(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_amount_compat(AmountCompat self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_call_compat(
      CallCompat self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_prepare_detailed_response_success_compat(
      PrepareDetailedResponseSuccessCompat self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_prepare_response_error(
      PrepareResponseError self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_prepare_response_not_required_compat(
      PrepareResponseNotRequiredCompat self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_primitive_signature_compat(
      PrimitiveSignatureCompat self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_pulse_metadata_compat(
      PulseMetadataCompat self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_ui_fields_compat(
      UiFieldsCompat self, SseSerializer serializer);

  @protected
  void sse_encode_bridging_error(BridgingError self, SseSerializer serializer);

  @protected
  void sse_encode_call_compat(CallCompat self, SseSerializer serializer);

  @protected
  void sse_encode_currency(Currency self, SseSerializer serializer);

  @protected
  void sse_encode_eip_1559_estimation_compat(
      Eip1559EstimationCompat self, SseSerializer serializer);

  @protected
  void sse_encode_error_compat(ErrorCompat self, SseSerializer serializer);

  @protected
  void sse_encode_execute_details_compat(
      ExecuteDetailsCompat self, SseSerializer serializer);

  @protected
  void sse_encode_fee_estimated_transaction_compat(
      FeeEstimatedTransactionCompat self, SseSerializer serializer);

  @protected
  void sse_encode_funding_metadata_compat(
      FundingMetadataCompat self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_initial_transaction_metadata_compat(
      InitialTransactionMetadataCompat self, SseSerializer serializer);

  @protected
  void sse_encode_list_funding_metadata_compat(
      List<FundingMetadataCompat> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_primitive_signature_compat(
      List<PrimitiveSignatureCompat> self, SseSerializer serializer);

  @protected
  void sse_encode_list_transaction_compat(
      List<TransactionCompat> self, SseSerializer serializer);

  @protected
  void sse_encode_list_transaction_fee_compat(
      List<TransactionFeeCompat> self, SseSerializer serializer);

  @protected
  void sse_encode_list_txn_details_compat(
      List<TxnDetailsCompat> self, SseSerializer serializer);

  @protected
  void sse_encode_metadata_compat(
      MetadataCompat self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(BigInt? self, SseSerializer serializer);

  @protected
  void sse_encode_prepare_detailed_response_compat(
      PrepareDetailedResponseCompat self, SseSerializer serializer);

  @protected
  void sse_encode_prepare_detailed_response_success_compat(
      PrepareDetailedResponseSuccessCompat self, SseSerializer serializer);

  @protected
  void sse_encode_prepare_response_available_compat(
      PrepareResponseAvailableCompat self, SseSerializer serializer);

  @protected
  void sse_encode_prepare_response_error(
      PrepareResponseError self, SseSerializer serializer);

  @protected
  void sse_encode_prepare_response_not_required_compat(
      PrepareResponseNotRequiredCompat self, SseSerializer serializer);

  @protected
  void sse_encode_primitive_signature_compat(
      PrimitiveSignatureCompat self, SseSerializer serializer);

  @protected
  void sse_encode_pulse_metadata_compat(
      PulseMetadataCompat self, SseSerializer serializer);

  @protected
  void sse_encode_transaction_compat(
      TransactionCompat self, SseSerializer serializer);

  @protected
  void sse_encode_transaction_fee_compat(
      TransactionFeeCompat self, SseSerializer serializer);

  @protected
  void sse_encode_transaction_receipt_compat(
      TransactionReceiptCompat self, SseSerializer serializer);

  @protected
  void sse_encode_txn_details_compat(
      TxnDetailsCompat self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_ui_fields_compat(
      UiFieldsCompat self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);
}

// Section: wire_class

class YttriumDartWire implements BaseWire {
  factory YttriumDartWire.fromExternalLibrary(ExternalLibrary lib) =>
      YttriumDartWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  YttriumDartWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClientPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_yttrium_dart_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClientPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClientPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_yttrium_dart_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClient =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerChainAbstractionClientPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();
}
