[package]
name = "yttrium"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true

[lib]
crate-type = ["lib", "staticlib", "cdylib"]

[[bin]]
name = "uniffi-bindgen"
path = "uniffi-bindgen.rs"
required-features = ["uniffi"]

[features]
default = ["eip155", "erc6492_client", "chain_abstraction_client"]
full = ["all_platforms", "all_clients", "all_namespaces"]

# Features enabling FFI bindings for different platforms
all_platforms = ["android", "ios", "wasm"]
ios = ["uniffi"]
android = ["uniffi", "dep:rustls-platform-verifier", "dep:jni"]
uniffi = [
    "dep:uniffi",
    "dep:uniffi_macros",
    "reqwest/default-tls",
    "native",
    "dep:tracing-subscriber",
]
native = [
    "dep:tokio-tungstenite",
    "tokio-tungstenite/connect",
    "tokio-tungstenite/handshake",
    "tokio-tungstenite/native-tls",
]
wasm = [
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "alloy/wasm-bindgen",
    "dep:tsify-next",
    "dep:derive_jserror",
    "getrandom/wasm_js",
    "getrandom2/js",
    "uuid/js",
    "dep:wasmtimer",
    "dep:web-sys",
    "web-sys/WebSocket",
    "web-sys/CloseEvent",
    "web-sys/MessageEvent",
]

all_namespaces = ["eip155", "solana", "sui", "stacks"]
eip155 = []
solana = [
    "dep:solana-sdk",
    "dep:solana-client",
    "dep:spl-token",
    "dep:spl-associated-token-account",
    "dep:bincode",
    "dep:data-encoding",
    "dep:quinn",
    "dep:const_format",
]
sui = [
    "dep:sui_sdk",
    "dep:sui_keys",
    "dep:sui_shared_crypto",
    "dep:fastcrypto",
    "dep:rand",
    "dep:bcs",
    "dep:tiny-bip39",
]
stacks = ["dep:stacks-rs", "dep:bip32", "dep:stacks_secp256k1"]

# Features contributing to bundle size, that you might not need
all_clients = [
    "account_client",
    "erc6492_client",
    "chain_abstraction_client",
    "transaction_sponsorship_client",
    "sign_client",
]
account_client = []
erc6492_client = []
chain_abstraction_client = []
transaction_sponsorship_client = []
sign_client = [
    "dep:futures-concurrency",
    "dep:chacha20poly1305",
    "dep:rand",
    "dep:data-encoding",
    "dep:x25519-dalek",
    "dep:hkdf",
    "dep:sha2",
    "dep:tokio-util",
]

# Features enabling test coverage
test_full = [
    "test_pimlico_api",
    "test_blockchain_api",
    "test_depends_on_env_REOWN_PROJECT_ID",
]
test_pimlico_api = []
test_blockchain_api = []
test_depends_on_env_REOWN_PROJECT_ID = []
test_sign = [
    "sign_client",
    "test_depends_on_env_REOWN_PROJECT_ID",
]

[dependencies]
uniffi = { workspace = true, optional = true, features = ["cli"] }
uniffi_macros = { workspace = true, optional = true }

wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-futures = { workspace = true, optional = true }
tsify-next = { workspace = true, optional = true, features = ["js"] }

# Ethereum
alloy = { workspace = true, features = [
    "contract",
    "network",
    "providers",
    "node-bindings",
    "rpc-types-trace",
    "json-rpc",
    "signer-mnemonic",
    "eip712",
    "rlp",
] }
alloy-provider = { workspace = true, features = ["erc4337-api"] }
erc6492.workspace = true
relay_rpc.workspace = true
tower = { version = "0.5", features = ["util"] }

# foundry-block-explorers = "0.2.3"
getrandom2 = { package = "getrandom", version = "0.2", default-features = false }
getrandom = { version = "0.3.1", default-features = false }

uuid = { version = "1.13.1", default-features = false, features = [
    "v4",
    "serde",
    "rng-getrandom",
] }

wasmtimer = { workspace = true, optional = true }

# Error/Result
eyre.workspace = true
thiserror.workspace = true

# Async
tokio = { workspace = true, default-features = false, features = ["rt"] }
tokio-util = { workspace = true, optional = true, default-features = false }
futures.workspace = true

# Serialization
serde.workspace = true
serde_json.workspace = true

# Env vars
dotenvy = { version = "0.15.7", default-features = false }

# Other
hex = { version = "0.4.3", features = ["std"], default-features = false }
async-trait = { version = "0.1.83", default-features = false }
tracing = { version = "0.1.40", default-features = false, features = [
    "release_max_level_debug",
] }
tracing-subscriber = { version = "0.3.19", default-features = false, optional = true, features = ["fmt", "std"] }
# fastlz-rs = { version = "0.0.3", features = ["std"], default-features = false }

# Networking
reqwest.workspace = true
url = { workspace = true, features = ["serde"] }

# TLS platform verifier for Android
rustls-platform-verifier = { version = "0.5", optional = true }
jni = { version = "0.21", optional = true }

# Tiny dependency, could copy source. Pinning to exact version to avoid supply-chain attacks.
derive_jserror = { version = "=0.1.0", optional = true, default-features = false }

# Solana
solana-sdk = { workspace = true, optional = true, features = [
    "full",
] } # TODO try to remove "full" feature
solana-client = { workspace = true, optional = true }
solana-seed-phrase = { workspace = true, optional = true }
spl-token = { workspace = true, optional = true }
spl-associated-token-account = { workspace = true, optional = true }
bincode = { workspace = true, optional = true }
data-encoding = { workspace = true, optional = true }
quinn = { workspace = true, optional = true, default-features = false }
const_format = { workspace = true, optional = true }

# SUI
sui_sdk = { workspace = true, optional = true }
sui_types = { workspace = true, optional = true }
sui_keys = { workspace = true, optional = true }
sui_shared_crypto = { workspace = true, optional = true }
fastcrypto = { workspace = true, optional = true }
bcs = { workspace = true, optional = true }
tiny-bip39 = { workspace = true, optional = true }

# Stacks
stacks-rs = { workspace = true, optional = true, features = [
    "crypto",
    "wallet-sdk",
    "transaction",
    "clarity",
] }
bip32 = { workspace = true, optional = true }
stacks_secp256k1 = { workspace = true, optional = true, features = [
    "hashes",
    "recovery",
] }
num-bigint = "0.4.6"

rand = { workspace = true, optional = true }

# Sign Client
futures-concurrency = { version = "7.6.3", optional = true }
tokio-tungstenite = { workspace = true, optional = true }
web-sys = { workspace = true, optional = true }
chacha20poly1305 = { workspace = true, optional = true, features = [
    "alloc",
    "os_rng",
] }
x25519-dalek = { version = "3.0.0-pre.0", features = [
    "static_secrets",
    "os_rng",
], optional = true }
hkdf = { version = "0.13.0-rc.0", optional = true }
sha2 = { version = "0.11.0-rc.0", optional = true }

[dev-dependencies]
# mocking
wiremock = { version = "0.6.0", default-features = false }
test-log = { version = "0.2.17", default-features = false, features = [
    "trace",
] }

# Networking
reqwest.workspace = true
alloy = { workspace = true, features = ["node-bindings", "reqwest"] }
serial_test.workspace = true
chacha20poly1305 = { workspace = true, features = ["alloc", "os_rng"] }
data-encoding = { workspace = true }

aws-config = { version = "1.1.7", features = ["behavior-version-latest"] }
aws-sdk-cloudwatch = { version = "1.91.0" }

[package.metadata.wasm-pack.profile.release]
wasm-opt = ['-Oz']
