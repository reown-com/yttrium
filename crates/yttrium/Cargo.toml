[package]
name = "yttrium"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true

[lib]
crate-type = ["lib", "cdylib"]

[features]
default = ["erc6492_client", "chain_abstraction_client"]
full = ["all_platforms", "all_clients"]

# Features enabling FFI bindings for different platforms
all_platforms = ["uniffi", "wasm"]
uniffi = ["dep:uniffi", "dep:uniffi_macros", "reqwest/default-tls"]
wasm = [
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "alloy/wasm-bindgen",
    "dep:tsify-next",
    "dep:derive_jserror",
    "getrandom/wasm_js",
    "getrandom2/js",
    "uuid/js",
    "dep:wasmtimer",
]

# Features contributing to bundle size, that you might not need
all_clients = [
    "account_client",
    "erc6492_client",
    "chain_abstraction_client",
    "transaction_sponsorship_client",
]
account_client = []
erc6492_client = []
chain_abstraction_client = []
transaction_sponsorship_client = []

# Features enabling test coverage
test_pimlico_api = []
test_blockchain_api = []

[dependencies]
uniffi = { workspace = true, optional = true }
uniffi_macros = { workspace = true, optional = true }

wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-futures = { workspace = true, optional = true }
tsify-next = { workspace = true, optional = true, features = ["js"] }

# Ethereum
alloy = { workspace = true, features = [
    "contract",
    "network",
    "providers",
    "node-bindings",
    "rpc-types-trace",
    "json-rpc",
    "signer-mnemonic",
    "eip712",
    "rlp",
] }
alloy-provider = { workspace = true, features = ["erc4337-api"] }
erc6492.workspace = true
relay_rpc.workspace = true
tower = { version = "0.5", features = ["util"] }

# foundry-block-explorers = "0.2.3"
getrandom2 = { package = "getrandom", version = "0.2", default-features = false }
getrandom = { version = "0.3.1", default-features = false }

uuid = { version = "1.13.1", default-features = false, features = [
    "v4",
    "serde",
    "rng-getrandom",
] }

wasmtimer = { workspace = true, optional = true }

# Error/Result
eyre.workspace = true
thiserror.workspace = true

# Async
tokio = { workspace = true, features = ["rt"] }
futures.workspace = true

# Serialization
serde.workspace = true
serde_json.workspace = true

# Env vars
dotenvy = { version = "0.15.7", default-features = false }

# Other
hex = { version = "0.4.3", features = ["std"], default-features = false }
async-trait = { version = "0.1.83", default-features = false }
tracing = { version = "0.1.40", default-features = false, features = [
    "release_max_level_warn",
] }
# fastlz-rs = { version = "0.0.3", features = ["std"], default-features = false }

# Networking
reqwest.workspace = true
url = { workspace = true, features = ["serde"] }

# Tiny dependency, could copy source. Pinning to exact version to avoid supply-chain attacks.
derive_jserror = { version = "=0.1.0", optional = true, default-features = false }

[dev-dependencies]
# mocking
wiremock = { version = "0.6.0", default-features = false }
test-log = { version = "0.2.17", default-features = false, features = [
    "trace",
] }

# Networking
reqwest.workspace = true
alloy = { workspace = true, features = ["node-bindings", "reqwest"] }
serial_test.workspace = true

[package.metadata.wasm-pack.profile.release]
wasm-opt = ['-Oz']
