name: Build and Release Yttrium Swift

on:
    workflow_dispatch:
      inputs:
        version:
          description: 'Version to release (e.g. 0.0.1)'
          required: true

env:
  CARGO_TERM_COLOR: always
  VERSION: ${{ github.event.inputs.version || '0.0.24' }}
  TARGET_BRANCH: ${{ github.ref_name }}
  PR_LABEL: swift-core-release

permissions:
  contents: write
  pull-requests: write

jobs:
  release-swift-package:
    runs-on: macos-latest-xlarge
    strategy:
      matrix:
        config:
          - debug
    steps:
      # 1. Checkout the Repository with full history
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history so that we can create and push tags

      # 2. Setup ccache (Optional: Improve build speeds)
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4

      # 3. Setup pnpm (JavaScript Package Manager)
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      # 4. Setup Rust Environment and Dependencies
      - name: Setup Rust Environment and Dependencies
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          rustup update stable && rustup default stable
          git submodule update --init --recursive
          make setup-thirdparty

      # 5. Select Newest Xcode Version Available
      - name: Select Xcode 15.4
        run: | 
          sudo xcode-select -s /Applications/Xcode.app

      # 6. Build and Package XCFramework
      - name: Build and Package XCFramework
        run: |
          make build-xcframework
          # Generate the XCFramework zip for release
          mkdir -p Output
          zip -r Output/libyttrium.xcframework.zip target/ios/libyttrium.xcframework

      # 7. Calculate Core XCFramework Checksum
      - name: Calculate Core XCFramework Checksum
        id: checksum
        run: |
          CHECKSUM=$(swift package compute-checksum Output/libyttrium.xcframework.zip)
          echo "checksum=$CHECKSUM" >> $GITHUB_OUTPUT
          echo "Core XCFramework checksum: $CHECKSUM"

      # 8. Update Package.swift for Core Only
      - name: Update Package.swift for Core Only
        run: |
          chmod +x scripts/update-package-swift-core.sh
          ./scripts/update-package-swift-core.sh "$VERSION" "${{ steps.checksum.outputs.checksum }}"

      # 9. Update Podspec with Version and Download URL
      - name: Update Podspec with Version and Download URL
        run: |
          # Replace the version line in Podspec
          sed -i '' "s/^  s\.version *= *.*/  s.version      = '${VERSION}'/g" YttriumWrapper.podspec

          # Construct the download URL
          DOWNLOAD_URL="https://github.com/reown-com/yttrium/releases/download/${VERSION}/libyttrium.xcframework.zip"

          # Replace all libuniffi_yttrium references with libyttrium
          sed -i '' "s|libuniffi_yttrium|libyttrium|g" YttriumWrapper.podspec
          # Update the download URL to the correct version
          sed -i '' "s|https://github.com/reown-com/yttrium/releases/download/[^']*|${DOWNLOAD_URL}|g" YttriumWrapper.podspec

      # 10. Create a Pull Request with Core updates
      - name: Create Pull Request for Core Release
        id: create_pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Package.swift and podspec for version ${{ env.VERSION }}"
          title: "chore: release Swift Core ${{ env.VERSION }}"
          body: |
            ## Summary
            - Release Yttrium (Core) version `${{ env.VERSION }}`
            - Generated XCFramework artifacts and updated Swift Package & Podspec metadata

            ## Automation
            - This pull request was created by the `release-swift` workflow
          branch: release/swift-core/${{ env.VERSION }}
          base: ${{ env.TARGET_BRANCH }}
          labels: |
            ${{ env.PR_LABEL }}
            ${{ env.PR_LABEL }}=${{ env.VERSION }}
            swift-core-release-run-id=${{ github.run_id }}
          add-paths: |
            Package.swift
            platforms/swift/Sources/Yttrium
            YttriumWrapper.podspec
          delete-branch: true

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: swift-core-release-${{ env.VERSION }}-run-${{ github.run_id }}
          path: |
            Output/libyttrium.xcframework.zip
          retention-days: 30
          if-no-files-found: error
