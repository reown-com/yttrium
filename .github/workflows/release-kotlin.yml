name: Build and Release Yttrium Kotlin

on:
  push
  # workflow_dispatch:
  #   inputs:
  #     version:
  #       description: 'Version to release (e.g. 0.0.1)'
  #       required: true

env:
  CARGO_TERM_COLOR: always
  VERSION: ${{ github.event.inputs.version || '0.0.24' }}
  TARGET_BRANCH: ${{ github.ref_name }}

permissions:
  contents: write

jobs:
  # build-kotlin-artifacts:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       target: [aarch64-linux-android, armv7-linux-androideabi]
    
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: ${{ matrix.target }}
  #         override: true
  #         components: rust-src

  #     - name: Set up Java
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'temurin'
  #         java-version: '17'
      
  #     - name: Set up Android SDK
  #       uses: android-actions/setup-android@v3
  #       with:
  #         api-level: 35
  #         build-tools: 35.0.0
  #         ndk-version: 27.2.12479018
      
  #     - name: Install cargo-ndk
  #       run: |
  #         cargo install cargo-ndk

  #     - name: Build Rust Library
  #       run: |
  #         declare -A abi_map
  #         abi_map[aarch64-linux-android]="arm64-v8a"
  #         abi_map[armv7-linux-androideabi]="armeabi-v7a"
  #         abi_name=${abi_map[${{ matrix.target }}]}

  #         abi_name=${abi_map[${{ matrix.target }}]}
  #         cargo ndk -t ${{ matrix.target }} build --release --features=uniffi/cli
  #         cd crates/kotlin-ffi
  #         mkdir -p android/src/main/jniLibs/$abi_name
  #         mv ../../target/${{ matrix.target }}/release/libuniffi_yttrium.so android/src/main/jniLibs/$abi_name/

  #     - name: Generate Kotlin bindings (once)
  #       if: ${{ matrix.target == 'aarch64-linux-android' }}
  #       run: |
  #         cd crates/kotlin-ffi
  #         cargo run --features=uniffi/cli --bin uniffi-bindgen generate --library android/src/main/jniLibs/arm64-v8a/libuniffi_yttrium.so --language kotlin --out-dir crates/kotlin-ffi/android/src/main/kotlin/com/reown/yttrium      
      
      # - name: Commit Generated Files
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #     git add .
      #     git commit -m "Add generated binaries and bindings for release: $VERSION"
      #     git push origin HEAD:$TARGET_BRANCH

  create-github-release:
    # needs: build-kotlin-artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 0.2.65 #${{ env.VERSION }}
          release_name: 0.2.65 #Yttrium ${{ env.VERSION }}
          draft: false
          prerelease: false
