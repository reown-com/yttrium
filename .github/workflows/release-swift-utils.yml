name: Build and Release Yttrium Swift Utils

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 0.0.1)'
        required: true

env:
  CARGO_TERM_COLOR: always
  VERSION: ${{ github.event.inputs.version || '0.0.1' }}
  TARGET_BRANCH: ${{ github.ref_name }}
  PR_LABEL: swift-utils-release

permissions:
  contents: write
  pull-requests: write

jobs:
  release-swift-utils-package:
    runs-on: macos-latest-xlarge
    strategy:
      matrix:
        config:
          - debug
    steps:
      # 1. Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Install sccache
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6

      # 3. Install pnpm
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # 4. Install Rust
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # 5. Select Xcode
      - name: Select Xcode
        run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer

      # 6. Build and Package Utils XCFramework
      - name: Build and Package Utils XCFramework
        run: |
          make build-utils-xcframework
          make generate-package-swift-utils

      # 7. Calculate Utils XCFramework Checksum (SPM)
      - name: Calculate Utils XCFramework Checksum
        id: checksum
        run: |
          CHECKSUM=$(swift package compute-checksum Output/libyttrium-utils.xcframework.zip)
          echo "checksum=$CHECKSUM" >> $GITHUB_OUTPUT
          echo "Utils XCFramework checksum: $CHECKSUM"

      # 8. Update Package.swift for Utils Only
      - name: Update Package.swift for Utils Only
        run: |
          chmod +x scripts/update-package-swift-utils.sh
          ./scripts/update-package-swift-utils.sh "$VERSION" "${{ steps.checksum.outputs.checksum }}"

      # 9. Update Utils Podspec version
      - name: Update Utils Podspec version
        run: |
          sed -i '' "s/spec.version      = \".*\"/spec.version      = \"$VERSION\"/" YttriumUtilsWrapper.podspec
          
          # Update the binary pod URL to the new pod zip
          DOWNLOAD_URL="https://github.com/reown-com/yttrium/releases/download/$VERSION/libyttrium-utils-pod.zip"
          sed -i '' "s|https://github.com/reown-com/yttrium/releases/download/[^/]*/libyttrium-utils-pod.zip|${DOWNLOAD_URL}|g" YttriumUtilsWrapper.podspec

      # 10. Create a Pull Request with Utils updates
      - name: Create Pull Request for Utils Release
        id: create_pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Package.swift, utils sources, and podspec for version ${{ env.VERSION }}"
          title: "chore: release Swift Utils ${{ env.VERSION }}"
          body: |
            ## Summary
            - Release YttriumUtils version `${{ env.VERSION }}`
            - Generated XCFramework artifacts and updated Swift Package & Podspec metadata

            ## Automation
            - This pull request was created by the `release-swift-utils` workflow
          branch: release/swift-utils/${{ env.VERSION }}
          base: ${{ env.TARGET_BRANCH }}
          labels: |
            ${{ env.PR_LABEL }}
            ${{ env.PR_LABEL }}=${{ env.VERSION }}
          add-paths: |
            Package.swift
            platforms/swift/Sources/YttriumUtils
            YttriumUtilsWrapper.podspec
          delete-branch: true

      - name: Summarize Pull Request
        if: steps.create_pr.outputs.pull-request-url != ''
        run: |
          echo "Created release pull request: ${{ steps.create_pr.outputs.pull-request-url }}" >> $GITHUB_STEP_SUMMARY

      - name: No Changes Summary
        if: steps.create_pr.outputs.pull-request-url == ''
        run: |
          echo "No updates detected for Swift Utils release." >> $GITHUB_STEP_SUMMARY

      # 11. Upload artifacts for the publish workflow
      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: swift-utils-release-${{ env.VERSION }}
          path: |
            Output/libyttrium-utils.xcframework.zip
            Output/libyttrium-utils-pod.zip
          retention-days: 30
          if-no-files-found: error