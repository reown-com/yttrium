[workspace]
members = [
  "crates/kotlin-ffi",
  "crates/yttrium",
  "crates/yttrium_dart/rust",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
rust-version = "1.79"
license = "Apache-2.0"

[workspace.dependencies]
# Errors/Result
eyre = { version = "0.6.12", features = ["default"], default-features = false }
thiserror = { version = "1.0", default-features = false }

# Async
tokio = { version = "1.17", default-features = false }
futures = { version = "0.3.31", default-features = false }

# Networking
reqwest = { version = "0.12.5", features = ["json"], default-features = false }

# Serialization
serde = { version = "1.0", features = ["derive"], default-features = false }
serde_json = { version = "1.0", default-features = false }

# Logging
oslog = { version = "0.2.0", default-features = false }
log = { version = "0.4.20", default-features = false }

alloy = { version = "0.9.2", default-features = false }
alloy-provider = { version = "0.9.2", default-features = false }
erc6492 = { git = "https://github.com/reown-com/erc6492.git", rev = "703016d", default-features = false }
relay_rpc = { git = "https://github.com/WalletConnect/WalletConnectRust.git", rev = "51e984e", default-features = false }

serial_test = { version = "3.2.0", default-features = false }

uniffi_build = { git = "https://github.com/mozilla/uniffi-rs", rev = "e796e00ad150f8b14b61a859a2e8c6497b35074e", default-features = false }
uniffi = { git = "https://github.com/mozilla/uniffi-rs", rev = "e796e00ad150f8b14b61a859a2e8c6497b35074e", default-features = false, features = ["tokio"] }
uniffi_macros = { git = "https://github.com/mozilla/uniffi-rs", rev = "e796e00ad150f8b14b61a859a2e8c6497b35074e", default-features = false }

# For building release-optimized binaries for UniFFI bindings
[profile.uniffi-release]
inherits = "uniffi-release-v1"

[profile.uniffi-release-v2] # Simply turns off debugging
inherits = "uniffi-release-v1"
debug = false

# TODO: consider more profiles for Kotlin vs Swift, and for Flutter, etc.

[profile.uniffi-release-v1]
# The values have been configured this way to prevent crashes in Swift debug builds with the default settings.
inherits = "release"
debug = true
lto = true
opt-level = 0
codegen-units = 1
# panic = "abort"
# strip = true - it removes kotlin-bindings

# What we should aim for short-term
[profile.uniffi-release-next]
inherits = "profile8"
# profile7-nightly-stdopt

[profile.uniffi-release-kotlin]
inherits = "profile11"

[profile.uniffi-release-swift]
inherits = "profile9"

[profile.uniffi-release-iter1] # first iteration, changes opt-level to 3
inherits = "release"
debug = true
lto = true
opt-level = 3
codegen-units = 1

[profile.uniffi-release-iter2] # same as profile6
inherits = "release"
lto = true
opt-level = 3
codegen-units = 1

[profile.uniffi-release-iter3] # same as profile7
inherits = "release"
lto = true
opt-level = 3
codegen-units = 1
strip = true

[profile.uniffi-release-iter4]
inherits = "release"
lto = true
opt-level = 3
codegen-units = 1
strip = true
# profile7-nightly

[profile.uniffi-release-iter5]
inherits = "release"
lto = true
opt-level = 3
codegen-units = 1
strip = true
# profile7-nightly-stdopt

[profile.profile1]
inherits = "release"
debug = true
opt-level = 0

[profile.profile2]
inherits = "release"
opt-level = 0

[profile.profile21]
inherits = "release"
opt-level = 1

[profile.profile22]
inherits = "release"
opt-level = 2

[profile.profile3]
inherits = "release"
opt-level = 3

[profile.profile4]
inherits = "release"
opt-level = "z"

[profile.profile5]
inherits = "release"
opt-level = 3
codegen-units = 1

[profile.profile6]
inherits = "release"
opt-level = 3
codegen-units = 1
lto = true

[profile.profile7]
inherits = "release"
opt-level = 3
codegen-units = 1
lto = true
strip = true

[profile.profile8]
inherits = "release"
opt-level = 3
codegen-units = 1
lto = true
panic = "abort"

[profile.profile9]
inherits = "release"
opt-level = 3
codegen-units = 1
lto = true
strip = true
panic = "abort"

[profile.profile10]
inherits = "release"
opt-level = "z"
codegen-units = 1
lto = true
strip = true
panic = "abort"

[profile.profile11]
inherits = "release"
opt-level = "z"
codegen-units = 1
lto = true
panic = "abort"

# Optimise libstd: https://github.com/johnthagen/min-sized-rust?tab=readme-ov-file#optimize-libstd-with-build-std
# Compress the binary (not library?): https://github.com/johnthagen/min-sized-rust?tab=readme-ov-file#compress-the-binary

# Questions:
# What flags cause crash in prod Swift?
# Can we use strip=true? Kotlin previously removed
# Can we use panic=abort? I think for now we shouldn't due to incomplete error handling coverage, but we should in the future

# [patch."https://github.com/reown-com/erc6492.git"]
# erc6492 = { path = "../erc6492-rs" }
